{
  "swagger": "2.0",
  "info": {
    "title": "message.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "TaskService"
    },
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth/authenticate": {
      "post": {
        "operationId": "UserService_AuthenticateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleAuthenticateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exampleAuthenticateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/auth/login": {
      "post": {
        "operationId": "UserService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exampleLoginRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/auth/logout": {
      "post": {
        "operationId": "UserService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exampleLogoutRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "operationId": "UserService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exampleRefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/health": {
      "get": {
        "operationId": "TaskService_Health",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleHealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks": {
      "get": {
        "operationId": "TaskService_ListTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleListTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TASK_STATUS_UNSPECIFIED",
                "TASK_STATUS_TODO",
                "TASK_STATUS_IN_PROGRESS",
                "TASK_STATUS_REVIEW",
                "TASK_STATUS_DONE",
                "TASK_STATUS_CANCELLED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.priority",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TASK_PRIORITY_UNSPECIFIED",
                "TASK_PRIORITY_LOW",
                "TASK_PRIORITY_MEDIUM",
                "TASK_PRIORITY_HIGH",
                "TASK_PRIORITY_CRITICAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.assignedTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.dueBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.dueAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.searchQuery",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort.field",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TASK_SORT_FIELD_UNSPECIFIED",
              "TASK_SORT_FIELD_CREATED_AT",
              "TASK_SORT_FIELD_UPDATED_AT",
              "TASK_SORT_FIELD_DUE_DATE",
              "TASK_SORT_FIELD_PRIORITY",
              "TASK_SORT_FIELD_TITLE"
            ],
            "default": "TASK_SORT_FIELD_UNSPECIFIED"
          },
          {
            "name": "sort.direction",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_DIRECTION_UNSPECIFIED",
              "SORT_DIRECTION_ASC",
              "SORT_DIRECTION_DESC"
            ],
            "default": "SORT_DIRECTION_UNSPECIFIED"
          }
        ],
        "tags": [
          "TaskService"
        ]
      },
      "post": {
        "operationId": "TaskService_CreateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleCreateTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exampleCreateTaskRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/analytics": {
      "get": {
        "operationId": "TaskService_GetTaskAnalytics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleGetTaskAnalyticsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "userIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "groupBy",
            "description": "\"status\", \"user\", \"priority\", \"day\", \"week\"",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/bulk_update": {
      "post": {
        "operationId": "TaskService_BulkUpdateTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleBulkUpdateTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exampleBulkUpdateTasksRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/search": {
      "get": {
        "operationId": "TaskService_SearchTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleSearchTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters.status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TASK_STATUS_UNSPECIFIED",
                "TASK_STATUS_TODO",
                "TASK_STATUS_IN_PROGRESS",
                "TASK_STATUS_REVIEW",
                "TASK_STATUS_DONE",
                "TASK_STATUS_CANCELLED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filters.priority",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TASK_PRIORITY_UNSPECIFIED",
                "TASK_PRIORITY_LOW",
                "TASK_PRIORITY_MEDIUM",
                "TASK_PRIORITY_HIGH",
                "TASK_PRIORITY_CRITICAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filters.tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filters.assignedTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters.dueBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters.dueAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters.searchQuery",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/tasks/{id}": {
      "get": {
        "operationId": "TaskService_GetTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleGetTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeComments",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TaskService"
        ]
      },
      "delete": {
        "operationId": "TaskService_DeleteTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleDeleteTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Hard delete vs soft delete",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TaskService"
        ]
      },
      "patch": {
        "operationId": "TaskService_UpdateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleUpdateTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskServiceUpdateTaskBody"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "USER_ROLE_UNSPECIFIED",
              "USER_ROLE_VIEWER",
              "USER_ROLE_MEMBER",
              "USER_ROLE_ADMIN"
            ],
            "default": "USER_ROLE_UNSPECIFIED"
          },
          {
            "name": "activeOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exampleCreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{id}": {
      "get": {
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleDeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "patch": {
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserServiceUpdateUserBody"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{userId}/preferences": {
      "patch": {
        "operationId": "UserService_UpdateUserPreferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleUpdateUserPreferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserServiceUpdateUserPreferencesBody"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{userId}/tasks": {
      "get": {
        "operationId": "UserService_GetUserTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exampleGetUserTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "TaskServiceUpdateTaskBody": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/exampleTask"
        },
        "updateMask": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Field mask for partial updates"
        }
      }
    },
    "UserServiceUpdateUserBody": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/exampleUser"
        }
      }
    },
    "UserServiceUpdateUserPreferencesBody": {
      "type": "object",
      "properties": {
        "preferences": {
          "$ref": "#/definitions/exampleUserPreferences"
        }
      }
    },
    "exampleAuthenticateUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "exampleAuthenticateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/exampleUser"
        },
        "token": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "exampleBulkUpdateTasksRequest": {
      "type": "object",
      "properties": {
        "taskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/exampleTaskStatus"
        },
        "assignedTo": {
          "type": "string"
        },
        "tagsToAdd": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tagsToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Bulk operations"
    },
    "exampleBulkUpdateTasksResponse": {
      "type": "object",
      "properties": {
        "updatedCount": {
          "type": "integer",
          "format": "int32"
        },
        "failedIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "exampleCreateTaskRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "priority": {
          "$ref": "#/definitions/exampleTaskPriority"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assignedTo": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Standard CRUD operations"
    },
    "exampleCreateTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/exampleTask"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "exampleCreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/exampleUserRole"
        }
      }
    },
    "exampleCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/exampleUser"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "exampleDeleteTaskResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "exampleDeleteUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "exampleGetTaskAnalyticsResponse": {
      "type": "object",
      "properties": {
        "analytics": {
          "$ref": "#/definitions/exampleTaskAnalytics"
        },
        "generatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "exampleGetTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/exampleTask"
        },
        "found": {
          "type": "boolean"
        }
      }
    },
    "exampleGetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/exampleUser"
        },
        "found": {
          "type": "boolean"
        }
      }
    },
    "exampleGetUserTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/exampleTask"
          }
        },
        "nextPageToken": {
          "type": "string"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "exampleHealthResponse": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "exampleListTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/exampleTask"
          }
        },
        "nextPageToken": {
          "type": "string"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "exampleListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/exampleUser"
          }
        },
        "nextPageToken": {
          "type": "string"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "exampleLoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "Legacy login messages (keeping for backward compatibility)"
    },
    "exampleLoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/exampleUser"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "exampleLogoutRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "exampleRefreshTokenRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "exampleRefreshTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "exampleSearchTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/exampleTask"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "searchTimeMs": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "exampleSortDirection": {
      "type": "string",
      "enum": [
        "SORT_DIRECTION_UNSPECIFIED",
        "SORT_DIRECTION_ASC",
        "SORT_DIRECTION_DESC"
      ],
      "default": "SORT_DIRECTION_UNSPECIFIED"
    },
    "exampleTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/exampleTaskStatus"
        },
        "priority": {
          "$ref": "#/definitions/exampleTaskPriority"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assignedTo": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "metrics": {
          "$ref": "#/definitions/exampleTaskMetrics"
        },
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/exampleTaskComment"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/exampleTaskAttachment"
          }
        }
      },
      "title": "Core domain entities"
    },
    "exampleTaskAnalytics": {
      "type": "object",
      "properties": {
        "totalTasks": {
          "type": "integer",
          "format": "int64"
        },
        "completedTasks": {
          "type": "integer",
          "format": "int64"
        },
        "inProgressTasks": {
          "type": "integer",
          "format": "int64"
        },
        "todoTasks": {
          "type": "integer",
          "format": "int64"
        },
        "completionRate": {
          "type": "number",
          "format": "float"
        },
        "averageCompletionTimeHours": {
          "type": "number",
          "format": "float"
        },
        "overdueTasks": {
          "type": "integer",
          "format": "int64"
        },
        "tasksByPriority": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "tasksCreatedThisWeek": {
          "type": "integer",
          "format": "int64"
        },
        "tasksCompletedThisWeek": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "exampleTaskAttachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "fileSize": {
          "type": "string",
          "format": "uint64"
        },
        "uploadedAt": {
          "type": "string",
          "format": "date-time"
        },
        "uploadedBy": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "exampleTaskComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "authorId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "exampleTaskEvent": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string"
        },
        "eventType": {
          "$ref": "#/definitions/exampleTaskEventType"
        },
        "task": {
          "$ref": "#/definitions/exampleTask"
        },
        "userId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "Real-time streaming messages"
    },
    "exampleTaskEventType": {
      "type": "string",
      "enum": [
        "TASK_EVENT_TYPE_UNSPECIFIED",
        "TASK_EVENT_TYPE_CREATED",
        "TASK_EVENT_TYPE_UPDATED",
        "TASK_EVENT_TYPE_DELETED",
        "TASK_EVENT_TYPE_ASSIGNED",
        "TASK_EVENT_TYPE_COMPLETED",
        "TASK_EVENT_TYPE_COMMENTED"
      ],
      "default": "TASK_EVENT_TYPE_UNSPECIFIED"
    },
    "exampleTaskFilter": {
      "type": "object",
      "properties": {
        "status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/exampleTaskStatus"
          }
        },
        "priority": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/exampleTaskPriority"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assignedTo": {
          "type": "string"
        },
        "dueBefore": {
          "type": "string",
          "format": "date-time"
        },
        "dueAfter": {
          "type": "string",
          "format": "date-time"
        },
        "searchQuery": {
          "type": "string"
        }
      }
    },
    "exampleTaskMetrics": {
      "type": "object",
      "properties": {
        "estimatedHours": {
          "type": "integer",
          "format": "int32"
        },
        "actualHours": {
          "type": "integer",
          "format": "int32"
        },
        "completionPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "exampleTaskPriority": {
      "type": "string",
      "enum": [
        "TASK_PRIORITY_UNSPECIFIED",
        "TASK_PRIORITY_LOW",
        "TASK_PRIORITY_MEDIUM",
        "TASK_PRIORITY_HIGH",
        "TASK_PRIORITY_CRITICAL"
      ],
      "default": "TASK_PRIORITY_UNSPECIFIED"
    },
    "exampleTaskSort": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/exampleTaskSortField"
        },
        "direction": {
          "$ref": "#/definitions/exampleSortDirection"
        }
      }
    },
    "exampleTaskSortField": {
      "type": "string",
      "enum": [
        "TASK_SORT_FIELD_UNSPECIFIED",
        "TASK_SORT_FIELD_CREATED_AT",
        "TASK_SORT_FIELD_UPDATED_AT",
        "TASK_SORT_FIELD_DUE_DATE",
        "TASK_SORT_FIELD_PRIORITY",
        "TASK_SORT_FIELD_TITLE"
      ],
      "default": "TASK_SORT_FIELD_UNSPECIFIED"
    },
    "exampleTaskStatus": {
      "type": "string",
      "enum": [
        "TASK_STATUS_UNSPECIFIED",
        "TASK_STATUS_TODO",
        "TASK_STATUS_IN_PROGRESS",
        "TASK_STATUS_REVIEW",
        "TASK_STATUS_DONE",
        "TASK_STATUS_CANCELLED"
      ],
      "default": "TASK_STATUS_UNSPECIFIED",
      "title": "Enums for better type safety"
    },
    "exampleUpdateTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/exampleTask"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "exampleUpdateUserPreferencesResponse": {
      "type": "object",
      "properties": {
        "preferences": {
          "$ref": "#/definitions/exampleUserPreferences"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "exampleUpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/exampleUser"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "exampleUploadTaskAttachmentResponse": {
      "type": "object",
      "properties": {
        "attachmentId": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "fileSize": {
          "type": "string",
          "format": "uint64"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "exampleUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/exampleUserRole"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        },
        "isActive": {
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/exampleUserStatus"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "preferences": {
          "$ref": "#/definitions/exampleUserPreferences"
        },
        "profile": {
          "$ref": "#/definitions/exampleUserProfile"
        }
      }
    },
    "exampleUserPreferences": {
      "type": "object",
      "properties": {
        "theme": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "notificationsEnabled": {
          "type": "boolean"
        },
        "emailNotifications": {
          "type": "boolean"
        }
      }
    },
    "exampleUserProfile": {
      "type": "object",
      "properties": {
        "avatarUrl": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "exampleUserRole": {
      "type": "string",
      "enum": [
        "USER_ROLE_UNSPECIFIED",
        "USER_ROLE_VIEWER",
        "USER_ROLE_MEMBER",
        "USER_ROLE_ADMIN"
      ],
      "default": "USER_ROLE_UNSPECIFIED"
    },
    "exampleUserStatus": {
      "type": "string",
      "enum": [
        "USER_STATUS_UNSPECIFIED",
        "USER_STATUS_ACTIVE",
        "USER_STATUS_INACTIVE",
        "USER_STATUS_SUSPENDED"
      ],
      "default": "USER_STATUS_UNSPECIFIED"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
